{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAEhF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACSD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLtBO,G,MAAY,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,aAAhB,OACrB,uBACMZ,UAAU,SACVa,KAAK,SACLF,YAAyB,kBACzBG,SAAUF,MCuCLG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAkBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAIf,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBATR,E,qDAYd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAET,SAAUmB,S,oBAQ/C,WAAU,IAAD,EAE2BC,KAAKP,MAA/Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZW,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQG,KAAK0B,cAAcC,SAASd,EAAYa,kBAEpD,OACE,sBAAK/B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAYY,aAAcgB,KAAKhB,eAC/B,cAAC,EAAD,CAAUJ,SAAUqB,W,GAlCVI,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8f1825c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set10&size180x180`} alt=\"monster\" />\r\n        \r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'> \r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n     </div>\r\n);","import React from \"react\";\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n          className='search'\r\n          type=\"search\"\r\n          placeholder={placeholder=\"search monsters\"}\r\n          onChange={handleChange}\r\n    />\r\n);\r\n","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox  handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}